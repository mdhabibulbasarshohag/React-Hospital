{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport initAuth from '../Firebase/init';\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\ninitAuth();\n\nconst useFirebase = () => {\n  _s();\n\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n  const [user, setUser] = useState({});\n  const [error, setError] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [pass, setPass] = useState('');\n\n  const handleGoogleSign = () => {\n    return signInWithPopup(auth, provider);\n  };\n\n  const signOutt = () => {\n    signOut(auth).then(() => {\n      setUser({});\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const handleName = e => {\n    setName(e.target.value);\n  };\n\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n\n  const handlePass = e => {\n    setPass(e.target.value);\n  };\n\n  const signUpp = () => {\n    createUserWithEmailAndPassword(auth, email, pass).then(result => {\n      const newUser = result.user;\n      newUser.displayName = name;\n      setUser(newUser);\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  const loggIn = () => {\n    signInWithEmailAndPassword(auth, email, pass).then(result => {\n      setUser(result.user);\n    }).catch(error => {\n      setError(error.message);\n    });\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {}\n    });\n  }, []);\n  return {\n    handleGoogleSign,\n    user,\n    error,\n    signOutt,\n    handleName,\n    handleEmail,\n    handlePass,\n    signUpp,\n    loggIn\n  };\n};\n\n_s(useFirebase, \"ZaYq3PkdsjdWN294phvgOzR48z8=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["/Users/mdhabibulbasarshohag/Desktop/project/Assignment/react-Hospital/src/Hooks/useFirebase.js"],"names":["useEffect","useState","initAuth","getAuth","GoogleAuthProvider","signInWithPopup","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","useFirebase","auth","provider","user","setUser","error","setError","name","setName","email","setEmail","pass","setPass","handleGoogleSign","signOutt","then","catch","message","handleName","e","target","value","handleEmail","handlePass","signUpp","result","newUser","displayName","loggIn"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport initAuth from '../Firebase/init';\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\n\n\n\ninitAuth()\n\nconst useFirebase = () => {\n\n    const auth = getAuth();\n    const provider = new GoogleAuthProvider();\n\n\n    const [user, setUser] = useState({})\n    const [error, setError] = useState('')\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [pass, setPass] = useState('')\n\n    const handleGoogleSign = () => {\n        return signInWithPopup(auth, provider)\n\n    }\n\n\n\n    const signOutt = () => {\n        signOut(auth).then(() => {\n            setUser({})\n        }).catch((error) => {\n            setError(error.message)\n        });\n    }\n\n\n\n    const handleName = e => {\n        setName(e.target.value)\n    }\n    const handleEmail = e => {\n        setEmail(e.target.value)\n    }\n    const handlePass = e => {\n        setPass(e.target.value)\n    }\n\n\n\n\n\n    const signUpp = () => {\n        createUserWithEmailAndPassword(auth, email, pass)\n            .then((result) => {\n                const newUser = result.user\n                newUser.displayName = name\n                setUser(newUser)\n            })\n            .catch((error) => {\n                setError(error.message)\n            });\n    }\n\n\n    const loggIn = () => {\n        signInWithEmailAndPassword(auth, email, pass)\n            .then((result) => {\n                setUser(result.user)\n            })\n            .catch((error) => {\n                setError(error.message)\n            });\n    }\n\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user)\n            } else {\n            }\n        });\n    }, [])\n\n\n\n    return {\n        handleGoogleSign, user, error, signOutt, handleName, handleEmail, handlePass, signUpp, loggIn\n    }\n};\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}